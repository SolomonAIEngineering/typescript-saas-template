{
  "name": "@v1/template-service",
  "version": "0.0.1",
  "private": true,
  "base": ".",
  "type": "module",
  "scripts": {
    "deploy": "wrangler deploy --env production",
    "dev": "wrangler dev",
    "start": "wrangler dev",
    "cf-typegen": "wrangler types",
    "test:watch": "vitest",
    "generate": "drizzle-kit generate",
    "up": "drizzle-kit up:sqlite",
    "migrate": "drizzle-kit migrate",
    "local:migrations:apply": "wrangler d1 migrations apply database --local",
    "local:d1:init": "npm run local:migrations:apply && wrangler d1 execute database --file='./migrations/0000_black_butterfly.sql' --local",
    "migrations:apply": "wrangler d1 migrations apply database --env production --remote",
    "d1:new": "wrangler d1 create database",
    "d1:init": "npm run migrations:apply && wrangler d1 execute database --file='./migrations/0000_black_butterfly.sql'",
    "check:type": "node tsc-all.mjs",
    "test": "vitest --config vitest.config.ts --reporter basic",
    "test:ci": "vitest run --config vitest.config.ts --reporter basic",
    "format": "prettier --write .",
    "cleanup": "rm -rf .wrangler && rm -rf .drizzle && rm -rf .drizzle-kit && rm -rf .drizzle-kit-sqlite && rm -rf .drizzle-kit-sqlite-schema",
    "start-tests": "npm run cleanup && npm run generate && npm run local:migrations:apply && npm run test:watch",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "dev:with-db": "npm run docker:up && npm run dev",
    "openapi": "bun scripts/openapi.ts",
    "precommit": "npm run openapi && npm run format",
    "create-queue": "wrangler queue create queue",
    "create-d1-database": "wrangler d1 create database",
    "create-namespace-queue-results": "wrangler kv:namespace create QUEUE_RESULTS",
    "create-namespace-kv-namespace": "wrangler kv:namespace create KV_NAMESPACE",
    "create-namespace-r2-bucket": "wrangler r2 bucket create template-service-bucket"
  },
  "dependencies": {
    "@axiomhq/js": "^1.1.1",
    "@chronark/zod-bird": "^0.3.9",
    "@cloudflare/itty-router-openapi": "^1.0.1",
    "@cloudflare/vitest-pool-workers": "^0.4.24",
    "@hono/swagger-ui": "^0.4.0",
    "@hono/zod-openapi": "^0.15.3",
    "base-x": "^5.0.0",
    "drizzle-kit": "^0.24.0",
    "drizzle-orm": "^0.33.0",
    "hono": "^4.5.8",
    "vitest": "1.5.0"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20240502.0",
    "@types/node": "^20.5.7",
    "@types/service-worker-mock": "^2.0.1",
    "prettier": "^3.3.3",
    "wrangler": "^3.0.0"
  }
}
